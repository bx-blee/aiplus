#+title: AIPlus -- Blee enhancements to aidermacs and gptel.
#+DATE: <2025-05-14 Wed 12:15>
#+AUTHOR: Mohsen BANAN
#+OPTIONS: toc:4


~Blee Panel Controls~: [[elisp:(show-all)][Show-All]] | [[elisp:(org-shifttab)][Overview]] | [[elisp:(progn (org-shifttab) (org-content))][Content]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(progn (save-buffer) (kill-buffer))][S&Q]] | [[elisp:(save-buffer)][Save]]  | [[elisp:(kill-buffer)][Quit]]  | [[elisp:(bury-buffer)][Bury]]  \\
~Panel Links~:  [[file:../_nodeBase_/fullUsagePanel-en.org][Blee Panel]]

[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/R2AkHl0GS5U/0.jpg)](https://www.youtube.com/watch?v=R2AkHl0GS5U)


* Overview

Emacs, Itself: the Ultimate AI Assistant

As of mid-2025, integrating AI into everyday environments is a universal trend.
Microsoft has embedded Copilot into Windows and Microsoft 365 apps.
Google offers Gemini and "Google Assistant" for AI integration in Android and Google Apps.
Apple, too, has Siri and "Apple Intelligence."
In the proprietary American digital ecosystems, these profit-driven companies dictate
the terms, and consumers accept what is provided.

In contrast, the Libre-Halaal ByStar Digital Ecosystem (https://github.com/mohsenBanan)
offers a different approach. Our usage environment, Blee (https://github.com/bx-blee),
is rooted in Emacs.

The integration of Artificial Intelligence in Emacs is particularly powerful.

Emacs, a 40+ year-old omni-context, editor-centered usage environment,
supports AI capabilities across all work contexts. Whether it's software
development (in any programming language), content creation and publishing
(such as LaTeX), sophisticated email management (like Gnus), or task and time
management (using org-mode), Emacs has it covered.

Each of these activities can now benefit from a unified and consistent
AI-assistant model.
The ease of AI integration into Emacs is a testament to its core philosophy
(conviviality of tools) and flexibility. Emacs' AI integration can be tailored
to your preferences, allowing you to choose local (self-hosted) or remote AI
engines. While many options exist, setting up a cohesive system
requires some integration effort. And, that is not always easy.

With Blee and BISOS (ByStar Internet Services OS) --
https://github.com/bisos), we have achieved this integration by incorporating
two key Emacs AI interface packages:

1) *gptel* - [GitHub](https://github.com/karthink/gptel): This package offers
   a simple Large Language Model chat client for Emacs, supporting multiple
   models and backends. It maintains the Emacs spirit by being accessible at
   any time within any buffer.

2) *aidermacs* - [GitHub](https://github.com/MatthewZMD/aidermacs): Designed
   for AI pair programming in Emacs, Aidermacs integrates Aider—an
   open-source AI pair programming tool—into Emacs. It surpasses other
   integrations, like Cursor, through its seamless incorporation.

Think of gptel as a versatile, omnipresent chatbox and aidermacs as a
multilingual AI coding assistant. Installing these is straightforward, and
with Blee, they come fully integrated for efficient AI-enhanced workflows.

With Blee, installation and configuration of gptel is using:\\
https://github.com/bx-blee/env3/blob/main/plus/bcpg%3AgptelPlus.el
and [[file:/bisos/blee/env3/plus/bcpg:gptelPlus.el]]

With Blee, installation and configuration of aidermacs is using:\\
https://github.com/bx-blee/env3/blob/main/plus/bcpg%3AaidermacsPlus.el
and [[file:/bisos/blee/env3/plus/bcpg:aidermacsPlus.el]]


We have augmented these with an additional package called AIPlus
(https://github.com/bx-blee/aiplus). AIPlus includes various menus and
utilities for integrating aidermacs and gptel in Emacs and Blee.

Installation and configuration of aidermacs is using:\\
https://github.com/bx-blee/env3/blob/main/plus/bnpa%3Aaiplus.el
and [[file:/bisos/blee/env3/plus/bnpa:aiplus.el]]

In the proprietary American model, the integration of AI into usage
environments has accelerated surveillance capitalism and that trend will
continue. In the Libre-Halaal model (https://github.com/bxplpc/120033), with
the integration of AI into Emacs, we aim to preserve autonomy and control.

I'll continue using Emacs.
Your call!

* Table of Contents     :TOC:
- [[#overview][Overview]]
- [[#aiplus--installation][AIPlus  Installation]]
  - [[#blee-installation][Blee Installation]]
  - [[#straight-installation][Straight Installation]]
- [[#blee-panels-and-documentation][Blee Panels and Documentation]]

* AIPlus  Installation

As with all blee packages, blee-installation and straight-installation information is provided.

As always, blee-installation is verified and with straight-installation you are on your own.


** Blee Installation

#+begin_src
    (b:pkg:straight|profiledInstall
       b:pkgsProfile:native
     '(aiplus :type git :host github :repo "bx-blee/aiplus"))))
#+end_src

Or better yet, through:\\
[[file:/bisos/blee/env3/plus/bnpa:aiplus.el]]


** Straight Installation

#+begin_src
(use-package aiplus
  :straight (:host github :repo "bx-blee/aiplus"))
#+end_src

But, I have not tested it. It may not work.


* Blee Panels and Documentation

Documentation of AIPLUS is in the form of a series of related panels. Primary AIPLUS Blee-Panel is
[[file:./panels/aiplus/_nodeBase_/fullUsagePanel-en.org]].
With some limitations, AIPLUS can be used as a stand alone Emacs package.




# ###+BEGIN: blee:bxPanel:footerOrgParams
#+STARTUP: overview
#+STARTUP: lognotestate
#+STARTUP: inlineimages
#+SEQ_TODO: TODO WAITING DELEGATED | DONE DEFERRED CANCELLED
#+TAGS: @desk(d) @home(h) @work(w) @withInternet(i) @road(r) call(c) errand(e)
#+CATEGORY: N:aiplus-conceptAndDesign
# ###+END
# ###+BEGIN: blee:bxPanel:footerEmacsParams :primMode "org-mode"
# Local Variables:
# eval: (setq-local toc-org-max-depth 4)
# eval: (setq-local ~selectedSubject "noSubject")
# eval: (setq-local ~primaryMajorMode 'org-mode)
# eval: (setq-local ~blee:panelUpdater nil)
# eval: (setq-local ~blee:dblockEnabler nil)
# eval: (setq-local ~blee:dblockController "interactive")
# eval: (img-link-overlays)
# eval: (set-fill-column 115)
# eval: (blee:fill-column-indicator/enable)
# eval: (bx:load-file:ifOneExists "./panelActions.el")
# End:

# ###+END
